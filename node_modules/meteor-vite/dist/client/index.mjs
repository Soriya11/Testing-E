import {
  package_default
} from "../chunk-7ZSU3YCS.mjs";

// src/client/ValidateStub.ts
function validateStub(stubbedPackage, { exportKeys, packageName, requestId, warnOnly }) {
  console.debug("Meteor-Vite package validation:", {
    packageName,
    stubbedPackage,
    exportKeys,
    warnOnly
  });
  const errors = [];
  exportKeys.forEach((key) => {
    if (!stubbedPackage) {
      errors.push(new ImportException(`Was not able to import Meteor package: "${packageName}"`, {
        requestId,
        packageName
      }));
    }
    if (typeof stubbedPackage[key] === "undefined") {
      errors.push(new UndefinedExportException(`Could not import Meteor package into the client: export '${key}' is undefined`, {
        requestId,
        packageName,
        exportName: key
      }));
    }
  });
  errors.forEach((error, i) => {
    if (warnOnly) {
      return console.warn(error);
    }
    if (errors.length - 1 >= i) {
      throw error;
    }
    console.error(error);
  });
}
var MeteorViteError = class extends Error {
  constructor(message, { packageName, requestId, exportName }) {
    const footerLines = [
      `\u26A1 Affected package: ${packageName}`,
      `\u26A1 Export name: { ${exportName} }`,
      `\u26A1 Vite Request ID: ${requestId}`,
      "",
      `\u26A0\uFE0F Open an issue - it's likely an issue with meteor-vite rather than '${packageName}'`,
      `    ${package_default.bugs.url}`,
      "",
      `\u{1F513}  At your own risk, you can disable validation for the '${packageName}' package`,
      `    This may allow the app to continue running, but can lead to other things breaking.`,
      `    ${package_default.homepage}#stub-validation`
    ].join("\n");
    super(message);
    this.name = `[meteor-vite] \u26A0\uFE0F ${this.constructor.name}`;
    this.stack += `

${footerLines}`;
  }
};
var ImportException = class extends MeteorViteError {
};
var UndefinedExportException = class extends MeteorViteError {
};
export {
  validateStub
};
//# sourceMappingURL=index.mjs.map