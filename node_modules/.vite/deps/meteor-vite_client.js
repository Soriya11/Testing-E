import "./chunk-TWLJ45QX.js";

// node_modules/meteor-vite/dist/chunk-7ZSU3YCS.mjs
var package_default = {
  name: "meteor-vite",
  version: "1.10.4",
  description: "",
  files: [
    "dist"
  ],
  main: "",
  exports: {
    "./plugin": {
      import: [
        "./dist/plugin/index.mjs"
      ],
      require: [
        "./dist/plugin/index.js"
      ]
    },
    "./client": "./dist/client/index.mjs"
  },
  scripts: {
    start: "ts-node-dev src/bin/debug/watch-mocks.ts",
    watch: "tsup --watch --dts --sourcemap",
    build: "rm -rf ./dist && tsup-node",
    prepare: "npm run build",
    test: "vitest"
  },
  tsup: [
    {
      entry: [
        "./src/bin/worker.ts",
        "./src/client/index.ts"
      ],
      outDir: "dist",
      format: "esm",
      sourcemap: true,
      dts: false
    },
    {
      entry: [
        "./src/plugin/index.ts"
      ],
      outDir: "dist/plugin",
      format: [
        "cjs",
        "esm"
      ],
      sourcemap: true,
      dts: true
    }
  ],
  typesVersions: {
    "*": {
      plugin: [
        "./dist/plugin/index.d.mts",
        "./dist/plugin/index.d.ts"
      ],
      client: [
        "./dist/client/index.d.mts"
      ]
    }
  },
  keywords: [
    "meteor",
    "vite"
  ],
  author: "",
  bugs: {
    url: "https://github.com/JorgenVatle/meteor-vite/issues"
  },
  homepage: "https://github.com/JorgenVatle/meteor-vite#readme",
  license: "ISC",
  dependencies: {
    "@babel/parser": "^7.22.5",
    "@babel/traverse": "^7.22.5",
    "p-limit": "^3.1.0",
    picocolors: "^1.0.0"
  },
  peerDependencies: {
    vite: ">=3.0.0 < 5.0.0"
  },
  devDependencies: {
    "@babel/generator": "^7.23.6",
    "@babel/types": "^7.22.5",
    "@sveltejs/vite-plugin-svelte": "^2.4.2",
    "@types/babel__generator": "^7.6.8",
    "@types/node": "^20.3.3",
    "ts-node-dev": "^2.0.0",
    tsup: "^7.1.0",
    typescript: "^5.1.6",
    vite: "^4.4.3",
    vitest: "^0.32.2"
  }
};

// node_modules/meteor-vite/dist/client/index.mjs
function validateStub(stubbedPackage, { exportKeys, packageName, requestId, warnOnly }) {
  console.debug("Meteor-Vite package validation:", {
    packageName,
    stubbedPackage,
    exportKeys,
    warnOnly
  });
  const errors = [];
  exportKeys.forEach((key) => {
    if (!stubbedPackage) {
      errors.push(new ImportException(`Was not able to import Meteor package: "${packageName}"`, {
        requestId,
        packageName
      }));
    }
    if (typeof stubbedPackage[key] === "undefined") {
      errors.push(new UndefinedExportException(`Could not import Meteor package into the client: export '${key}' is undefined`, {
        requestId,
        packageName,
        exportName: key
      }));
    }
  });
  errors.forEach((error, i) => {
    if (warnOnly) {
      return console.warn(error);
    }
    if (errors.length - 1 >= i) {
      throw error;
    }
    console.error(error);
  });
}
var MeteorViteError = class extends Error {
  constructor(message, { packageName, requestId, exportName }) {
    const footerLines = [
      `\u26A1 Affected package: ${packageName}`,
      `\u26A1 Export name: { ${exportName} }`,
      `\u26A1 Vite Request ID: ${requestId}`,
      "",
      `\u26A0\uFE0F Open an issue - it's likely an issue with meteor-vite rather than '${packageName}'`,
      `    ${package_default.bugs.url}`,
      "",
      `\u{1F513}  At your own risk, you can disable validation for the '${packageName}' package`,
      `    This may allow the app to continue running, but can lead to other things breaking.`,
      `    ${package_default.homepage}#stub-validation`
    ].join("\n");
    super(message);
    this.name = `[meteor-vite] \u26A0\uFE0F ${this.constructor.name}`;
    this.stack += `

${footerLines}`;
  }
};
var ImportException = class extends MeteorViteError {
};
var UndefinedExportException = class extends MeteorViteError {
};
export {
  validateStub
};
//# sourceMappingURL=meteor-vite_client.js.map
